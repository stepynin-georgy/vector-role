---
# tasks file for vector-role
- name: Install, configure, and start Vector
  tags: vector
  block:
    - name: Create vector work directory
      become: true
      ansible.builtin.file:
        path: "{{ vector_workdir }}"
        state: directory
        mode: "0755"

    - name: Get Vector distrib
      become: true
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-{{ vector_os_arch }}-unknown-linux-gnu.tar.gz"
        dest: "{{ vector_workdir }}/vector-{{ vector_version }}-{{ vector_os_arch }}-unknown-linux-gnu.tar.gz"
        mode: "0644"

    - name: Unzip Vector archive
      become: true
      ansible.builtin.unarchive:
        remote_src: true
        src: "{{ vector_workdir }}/vector-{{ vector_version }}-{{ vector_os_arch }}-unknown-linux-gnu.tar.gz"
        dest: "{{ vector_workdir }}"

    - name: Install Vector binary
      become: true
      ansible.builtin.copy:
        remote_src: true
        src: "{{ vector_workdir }}/vector-{{ vector_os_arch }}-unknown-linux-gnu/bin/vector"
        dest: "/usr/bin/"
        mode: "0755"
        owner: root
        group: root

    - name: Check Vector installation
      become: true
      ansible.builtin.command: "vector --version"
      register: var_vector
      failed_when: var_vector.rc != 0
      changed_when: var_vector.rc == 0

    - name: Create Vector config vector.toml
      become: true
      ansible.builtin.template:
        src: templates/vector.toml
        dest: /etc/vector/
        owner: root
        group: root
        mode: "0644"
        backup: true

    - name: Create vector.service daemon
      become: true
      ansible.builtin.copy:
        remote_src: true
        src: "{{ vector_workdir }}/vector-{{ vector_os_arch }}-unknown-linux-gnu/etc/systemd/vector.service"
        dest: "/lib/systemd/system/"
        mode: "0644"
        owner: root
        group: root
      notify: Start Vector service

    - name: Modify vector.service file
      become: true
      ansible.builtin.replace:
        backup: true
        path: "/lib/systemd/system/vector.service"
        regexp: "^ExecStart=/usr/bin/vector$"
        replace: "ExecStart=/usr/bin/vector --config /etc/vector/vector.toml"
      notify: Start Vector service

    - name: Create user vector
      become: true
      ansible.builtin.user:
        create_home: false
        name: "{{ vector_os_user }}"

    - name: Create Vector data_dir
      become: true
      ansible.builtin.file:
        path: "/var/lib/vector"
        state: directory
        mode: "0755"
        owner: "{{ vector_os_user }}"
        group: "{{ vector_os_group }}"
